#include<iostream>
#include"AVLTree.h"
#include"Node.h"
#include"InputReader.h"
using namespace std;

void insertAVLNode();
void DeleteAVLNode();

int main()
{
	DeleteAVLNode();
	return 0;
}
void insertAVLNode()
{
	//declare
	int *arr=NULL, length=0;
	AVLTree Tree= AVLTree();

	//input
	cout << "input length of array" << endl;
	cin >> length;
	
	arr = new int[length];//dynamic array

	cout <<"input elements in array"<<endl;
	for (int i = 0; i < length; i++)
	{
		cin >> arr[i];
	}
	
	//array to AVL tree
	Tree = AVLTree::ArrayToAVL(arr, length);
	
	//print tree
	Tree.PrintAVL();

	//delete garbage
	delete[] arr;
	arr = NULL;
}
void DeleteAVLNode()
{
	int *arr=NULL;
	int count=0,DataNode=0;
	AVLTree tree = AVLTree();

	//read data from file to array
	ReadArrayInput("E2.txt", arr, count);

	//insert elements in array to AVL tree
	tree = AVLTree::ArrayToAVL(arr, count);

	//show tree
	tree.PrintAVL();

	//delete AVL node	
	while (DataNode != -1)
	{
		bool success = false;

		cout << "input data of node which you want to delete from AVL tree or input -1 to break" << endl;
		cin >> DataNode;
		cout << endl;

		success=tree.AVLDelete(DataNode);

		if (success == false)
			cout << "Can't delete because AVLTree don't have this node" << endl;
		
		tree.PrintAVL();
	}

}